# source: http://localhost:4000
# timestamp: Wed Oct 10 2018 19:14:35 GMT-0700 (Pacific Daylight Time)

type Channels implements Node {
  id: ID!
  channelname: String!
  guild_channels(where: Guild_channelsWhereInput, orderBy: Guild_channelsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Guild_channels!]
  guild_id: String!
  messages(where: MessagesWhereInput, orderBy: MessagesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Messages!]
  owner(where: UsersWhereInput): Users
  type: Int!
}

enum ChannelsOrderByInput {
  id_ASC
  id_DESC
  channelname_ASC
  channelname_DESC
  guild_id_ASC
  guild_id_DESC
  type_ASC
  type_DESC
}

input ChannelsWhereInput {
  """Logical AND on all given filters."""
  AND: [ChannelsWhereInput!]

  """Logical OR on all given filters."""
  OR: [ChannelsWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ChannelsWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  channelname: String

  """All values that are not equal to given value."""
  channelname_not: String

  """All values that are contained in given list."""
  channelname_in: [String!]

  """All values that are not contained in given list."""
  channelname_not_in: [String!]

  """All values less than the given value."""
  channelname_lt: String

  """All values less than or equal the given value."""
  channelname_lte: String

  """All values greater than the given value."""
  channelname_gt: String

  """All values greater than or equal the given value."""
  channelname_gte: String

  """All values containing the given string."""
  channelname_contains: String

  """All values not containing the given string."""
  channelname_not_contains: String

  """All values starting with the given string."""
  channelname_starts_with: String

  """All values not starting with the given string."""
  channelname_not_starts_with: String

  """All values ending with the given string."""
  channelname_ends_with: String

  """All values not ending with the given string."""
  channelname_not_ends_with: String
  guild_id: String

  """All values that are not equal to given value."""
  guild_id_not: String

  """All values that are contained in given list."""
  guild_id_in: [String!]

  """All values that are not contained in given list."""
  guild_id_not_in: [String!]

  """All values less than the given value."""
  guild_id_lt: String

  """All values less than or equal the given value."""
  guild_id_lte: String

  """All values greater than the given value."""
  guild_id_gt: String

  """All values greater than or equal the given value."""
  guild_id_gte: String

  """All values containing the given string."""
  guild_id_contains: String

  """All values not containing the given string."""
  guild_id_not_contains: String

  """All values starting with the given string."""
  guild_id_starts_with: String

  """All values not starting with the given string."""
  guild_id_not_starts_with: String

  """All values ending with the given string."""
  guild_id_ends_with: String

  """All values not ending with the given string."""
  guild_id_not_ends_with: String
  type: Int

  """All values that are not equal to given value."""
  type_not: Int

  """All values that are contained in given list."""
  type_in: [Int!]

  """All values that are not contained in given list."""
  type_not_in: [Int!]

  """All values less than the given value."""
  type_lt: Int

  """All values less than or equal the given value."""
  type_lte: Int

  """All values greater than the given value."""
  type_gt: Int

  """All values greater than or equal the given value."""
  type_gte: Int
  guild_channels_every: Guild_channelsWhereInput
  guild_channels_some: Guild_channelsWhereInput
  guild_channels_none: Guild_channelsWhereInput
  messages_every: MessagesWhereInput
  messages_some: MessagesWhereInput
  messages_none: MessagesWhereInput
  owner: UsersWhereInput
}

type Credentials implements Node {
  id: ID!
  password: String!
  user(where: UsersWhereInput): Users
}

enum CredentialsOrderByInput {
  id_ASC
  id_DESC
  password_ASC
  password_DESC
}

input CredentialsWhereInput {
  """Logical AND on all given filters."""
  AND: [CredentialsWhereInput!]

  """Logical OR on all given filters."""
  OR: [CredentialsWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CredentialsWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  user: UsersWhereInput
}

type Guild_channels implements Node {
  id: ID!
  channel(where: ChannelsWhereInput): Channels
  guild(where: GuildsWhereInput): Guilds
}

enum Guild_channelsOrderByInput {
  id_ASC
  id_DESC
}

input Guild_channelsWhereInput {
  """Logical AND on all given filters."""
  AND: [Guild_channelsWhereInput!]

  """Logical OR on all given filters."""
  OR: [Guild_channelsWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [Guild_channelsWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  channel: ChannelsWhereInput
  guild: GuildsWhereInput
}

type Guild_members implements Node {
  id: ID!
  guild(where: GuildsWhereInput): Guilds
  user(where: UsersWhereInput): Users
}

enum Guild_membersOrderByInput {
  id_ASC
  id_DESC
}

input Guild_membersWhereInput {
  """Logical AND on all given filters."""
  AND: [Guild_membersWhereInput!]

  """Logical OR on all given filters."""
  OR: [Guild_membersWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [Guild_membersWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  guild: GuildsWhereInput
  user: UsersWhereInput
}

type Guilds implements Node {
  id: ID!
  guildname: String!
  owner(where: UsersWhereInput): Users
  guild_channels(where: Guild_channelsWhereInput, orderBy: Guild_channelsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Guild_channels!]
  guild_members(where: Guild_membersWhereInput, orderBy: Guild_membersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Guild_members!]
}

enum GuildsOrderByInput {
  id_ASC
  id_DESC
  guildname_ASC
  guildname_DESC
}

input GuildsWhereInput {
  """Logical AND on all given filters."""
  AND: [GuildsWhereInput!]

  """Logical OR on all given filters."""
  OR: [GuildsWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GuildsWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  guildname: String

  """All values that are not equal to given value."""
  guildname_not: String

  """All values that are contained in given list."""
  guildname_in: [String!]

  """All values that are not contained in given list."""
  guildname_not_in: [String!]

  """All values less than the given value."""
  guildname_lt: String

  """All values less than or equal the given value."""
  guildname_lte: String

  """All values greater than the given value."""
  guildname_gt: String

  """All values greater than or equal the given value."""
  guildname_gte: String

  """All values containing the given string."""
  guildname_contains: String

  """All values not containing the given string."""
  guildname_not_contains: String

  """All values starting with the given string."""
  guildname_starts_with: String

  """All values not starting with the given string."""
  guildname_not_starts_with: String

  """All values ending with the given string."""
  guildname_ends_with: String

  """All values not ending with the given string."""
  guildname_not_ends_with: String
  owner: UsersWhereInput
  guild_channels_every: Guild_channelsWhereInput
  guild_channels_some: Guild_channelsWhereInput
  guild_channels_none: Guild_channelsWhereInput
  guild_members_every: Guild_membersWhereInput
  guild_members_some: Guild_membersWhereInput
  guild_members_none: Guild_membersWhereInput
}

type Messages implements Node {
  id: ID!
  content: String!
  author(where: UsersWhereInput): Users
  channel(where: ChannelsWhereInput): Channels
}

enum MessagesOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
}

input MessagesWhereInput {
  """Logical AND on all given filters."""
  AND: [MessagesWhereInput!]

  """Logical OR on all given filters."""
  OR: [MessagesWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MessagesWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  author: UsersWhereInput
  channel: ChannelsWhereInput
}

type Mutation {
  createUsers(username: String!, email: String!): Users
  createGuilds(guildname: String!, owner: String!): Guilds
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

type Query {
  user(id: ID!): Users
  users: [Users!]!
}

type Users implements Node {
  id: ID!
  username: String!
  email: String!
  channels(where: ChannelsWhereInput, orderBy: ChannelsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Channels!]
  credentials(where: CredentialsWhereInput, orderBy: CredentialsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Credentials!]
  guild_members(where: Guild_membersWhereInput, orderBy: Guild_membersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Guild_members!]
  guilds(where: GuildsWhereInput, orderBy: GuildsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Guilds!]
  messages(where: MessagesWhereInput, orderBy: MessagesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Messages!]
}

input UsersWhereInput {
  """Logical AND on all given filters."""
  AND: [UsersWhereInput!]

  """Logical OR on all given filters."""
  OR: [UsersWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UsersWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  username: String

  """All values that are not equal to given value."""
  username_not: String

  """All values that are contained in given list."""
  username_in: [String!]

  """All values that are not contained in given list."""
  username_not_in: [String!]

  """All values less than the given value."""
  username_lt: String

  """All values less than or equal the given value."""
  username_lte: String

  """All values greater than the given value."""
  username_gt: String

  """All values greater than or equal the given value."""
  username_gte: String

  """All values containing the given string."""
  username_contains: String

  """All values not containing the given string."""
  username_not_contains: String

  """All values starting with the given string."""
  username_starts_with: String

  """All values not starting with the given string."""
  username_not_starts_with: String

  """All values ending with the given string."""
  username_ends_with: String

  """All values not ending with the given string."""
  username_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  channels_every: ChannelsWhereInput
  channels_some: ChannelsWhereInput
  channels_none: ChannelsWhereInput
  credentials_every: CredentialsWhereInput
  credentials_some: CredentialsWhereInput
  credentials_none: CredentialsWhereInput
  guild_members_every: Guild_membersWhereInput
  guild_members_some: Guild_membersWhereInput
  guild_members_none: Guild_membersWhereInput
  guilds_every: GuildsWhereInput
  guilds_some: GuildsWhereInput
  guilds_none: GuildsWhereInput
  messages_every: MessagesWhereInput
  messages_some: MessagesWhereInput
  messages_none: MessagesWhereInput
}
