# import * from './generated/prisma.graphql'

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  username: String!
  avatar: String
  lastSeenOn: String
  
  ownerOfGuild: [Guild!]!
  memberOf: [Guild!]!
  ownerOfDMs: [Channel!]!
  dmChannels: [Channel!]!
  messages: [Message!]!
}


type Mutation {
  # Auth
  signup(email: String!, password: String!, username: String!, avatar: String) : AuthPayload
  login(email: String!, password: String!): AuthPayload
  logout(lastSeenOn: String!): User

  # Guilds
  createGuild(name: String!, avatar: String): Guild
  joinGuild(slug: String!): Guild
  
  # Channels
  createChannel(id: ID!, type: Int!, name: String!) : Channel

  # Messages
  createMessage(id: ID!, content: String!): Message

  # Invites
  createSlug(id: ID!): Slug
}

type Query {
  user(id: ID): User
  guilds: [Guild!]!
  categories(id: ID!, orderBy: ChannelOrderByInput): [Channel!]!
  channel(id: ID!): Channel
  allMessages(id: ID!): [Message!]!
}